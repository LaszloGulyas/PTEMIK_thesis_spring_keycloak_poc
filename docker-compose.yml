version: '4.12'

volumes:
  postgres-data:
    driver: local
  springapp-data:
    driver: local

services:
  postgres:
    build: docker/postgres/.
    image: spring-keycloak-poc-postgres
    container_name: postgres-14.0
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
  keycloak:
    image: quay.io/keycloak/keycloak:19.0.2
    container_name: keycloak-19.0.2
    hostname: keycloak
    volumes:
      - ./docker/keycloak/import/project:/opt/keycloak/data/import
    environment:
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_DB: postgres
      KC_DB_URL: 'jdbc:postgresql://postgres/keycloak'
      KC_DB_USER: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8081:8081"
    command:
      - "start-dev"
      - "--import-realm"
      - "--http-port=8081"
    depends_on:
      - postgres
  springapp:
    build: ./backend/spring-rest-server
    image: spring-keycloak-poc-springapp
    container_name: springapp-0.0.1
    volumes:
      - springapp-data:/var/lib/springapp/data
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - keycloak
  angularapp:
    build: ./frontend/angular-nginx
    image: spring-keycloak-poc-angularapp
    container_name: angular-1.0
    ports:
      - "4200:4200"
    depends_on:
      - springapp
